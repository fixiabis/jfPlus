input.addEventListener("input", function () {
    output.value = transpile(input.value);
});

download.addEventListener("click", function () {
    var file = new Blob([output.value], { type: "text/js" });
    var url = URL.createObjectURL(file);
    var downloadObject = document.createElement("a");
    downloadObject.href = url;
    downloadObject.download = "full.jf";
    document.body.appendChild(downloadObject);
    downloadObject.onclick = function () {
        document.body.removeChild(downloadObject);
    };
    downloadObject.click();
});

var HEADER = `__=({}+[])[-~-~-~-~-~[]]+({}+[])[-~[]]+([][[]]+[])[-~[]]+(![]+[])[-~-~-~[]]+(!![]+[])[+[]]+(!![]+[])[-~[]]+([][[]]+[])[+[]]+({}+[])[-~-~-~-~-~[]]+(!![]+[])[+[]]+({}+[])[-~[]]+(!![]+[])[-~[]];_$=([]+[])[__]+[];_$[+[]]===(![]+[])[+[]]?(_$=_$[-~-~-~[]*-~-~-~[]]+_$[[]+-~[]+-~-~-~-~[]]):_$[-~[]]===(![]+[])[+[]]?(_$=_$[[]+-~[]+(+[])]+_$[[]+-~[]+-~-~-~-~-~[]]):_$[-~-~[]]===(![]+[])[+[]]&&(_$=_$[[]+-~[]+(+[])]+_$[[]+-~[]+-~-~-~-~-~-~[]]);_$=(!![]+[])[+[]]+({}+[])[-~[]]+_$[+[]]+(!![]+[])[+[]]+(!![]+[])[-~[]]+([][[]]+[])[-~-~-~-~-~[]]+([][[]]+[])[-~[]]+_$[-~[]];_=[][__][__]((!![]+[])[-~[]]+(!![]+[])[-~-~-~[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[-~[]]+([][[]]+[])[-~[]]+({}+[])[-~-~-~-~-~-~-~[]]+(!![]+[])[+[]]+(-~-~-~-~[]*-~-~-~-~[]-~[])[_$]([]+-~-~-~[]+-~-~[])+([][[]]+[])[-~-~-~-~-~[]]+(![]+[])[-~-~-~[]])();_$_=_[(!![]+[])[-~-~-~[]]+(![]+[])[-~-~-~[]]+({}+[])[-~-~-~-~-~[]]+(![]+[])[-~[]]+(-~-~-~-~-~[]*-~-~-~-~-~[])[_$]([]+-~-~-~[]+-~-~[])+(!![]+[])[-~-~-~[]]];_$$=([]+[])[__][(![]+[])[+[]]+(!![]+[])[-~[]]+({}+[])[-~[]]+(+([]+-~-~[]+-~-~[]))[_$]([]+-~-~[]+-~-~-~[])+_$_((/,/+[])[-~[]])[-~-~[]]+(-~-~-~-~[]*-~-~-~-~[]-~[])[_$]([]+-~-~-~[]+-~-~[])+(![]+[])[-~[]]+(!![]+[])[-~[]]+_$_((/,/+[])[-~[]])[-~-~[]]+({}+[])[-~[]]+([][[]]+[])[-~-~[]]+(!![]+[])[-~-~-~[]]]`;

eval(HEADER);

var STRING_MAP = {
    [`true`]: `!![]`,
    [`false`]: `![]`,
    [`NaN`]: `(+{})`,
    [`constructor`]: `__`,
    [`toString`]: `_$`,
    [`Infinity`]: `-~[]/[]`,
    [`-Infinity`]: `~[]/[]`,
    [`undefined`]: `[][[]]`,
    [`[object Object]`]: `{}`,
    [`[object Undefined]`]: `({})[_$][({}+[])[-~-~-~-~-~[]]+(![]+[])[-~[]]+(![]+[])[-~-~[]]+(![]+[])[-~-~[]]]()`,
};

var CHAR_MAP = {
    [` `]: `({}+[])[-~-~-~-~-~-~-~[]]`,
    [`!`]: `(/!/+[])[-~[]]`,
    [`"`]: `(/"/+[])[-~[]]`,
    [`#`]: `(/#/+[])[-~[]]`,
    [`$`]: `(/\\$/+[])[-~-~[]]`,
    [`%`]: `(/%/+[])[-~[]]`,
    [`&`]: `(/&/+[])[-~[]]`,
    [`'`]: `(/'/+[])[-~[]]`,
    [`(`]: `(/\\(/+[])[-~-~[]]`,
    [`)`]: `(/\\)/+[])[-~-~[]]`,
    [`*`]: `(/\\*/+[])[-~-~[]]`,
    [`+`]: `(/\\+/+[])[-~-~[]]`,
    [`,`]: `(/,/+[])[-~[]]`,
    [`-`]: `(/-/+[])[-~[]]`,
    [`.`]: `(/\\./+[])[-~-~[]]`,
    [`/`]: `(/\\//+[])[-~-~[]]`,
    [`0`]: `(+[])`,
    [`1`]: `-~[]`,
    [`2`]: `-~-~[]`,
    [`3`]: `-~-~-~[]`,
    [`4`]: `-~-~-~-~[]`,
    [`5`]: `-~-~-~-~-~[]`,
    [`6`]: `-~-~-~-~-~-~[]`,
    [`7`]: `-~-~-~-~-~-~-~[]`,
    [`8`]: `-~-~[]*-~-~-~-~[]`,
    [`9`]: `-~-~-~[]*-~-~-~[]`,
    [`:`]: `(/:/+[])[-~[]]`,
    [`;`]: `(/;/+[])[-~[]]`,
    [`<`]: `(/</+[])[-~[]]`,
    [`=`]: `(/=/+[])[-~[]]`,
    [`>`]: `(/>/+[])[-~[]]`,
    [`?`]: `(/\\?/+[])[-~-~[]]`,
    [`@`]: `(/@/+[])[-~[]]`,
    [`A`]: `_$_((/:/+[])[-~[]])[-~-~[]]`,
    [`B`]: `_$_((/;/+[])[-~[]])[-~-~[]]`,
    [`C`]: `_$_((/,/+[])[-~[]])[-~-~[]]`,
    [`D`]: `_$_((/=/+[])[-~[]])[-~-~[]]`,
    [`E`]: `_$_((/>/+[])[-~[]])[-~-~[]]`,
    [`F`]: `_$_((/\\?/+[])[-~-~[]])[-~-~[]]`,
    [`I`]: `(-~[]/[]+[])[+[]]`,
    [`N`]: `(+{}+[])[+[]]`,
    [`O`]: `({}+[])[-~-~[]*-~-~-~-~[]]`,
    [`S`]: `_$[-~-~[]]`,
    [`U`]: `({})[_$][({}+[])[-~-~-~-~-~[]]+(![]+[])[-~[]]+(![]+[])[-~-~[]]+(![]+[])[-~-~[]]]()[-~-~[]*-~-~-~-~[]]`,
    [`[`]: `({}+[])[+[]]`,
    [`\\`]: `(/\\\\/+[])[-~[]]`,
    [`]`]: `({}+[])[[]+-~[]+-~-~-~-~[]]`,
    [`^`]: `(/^/+[])[-~[]]`,
    [`_`]: `(/_/+[])[-~[]]`,
    [`\``]: `(/\`/+[])[-~[]]`,
    [`a`]: `(![]+[])[-~[]]`,
    [`b`]: `({}+[])[-~-~[]]`,
    [`c`]: `({}+[])[-~-~-~-~-~[]]`,
    [`d`]: `([][[]]+[])[-~-~[]]`,
    [`e`]: `(!![]+[])[-~-~-~[]]`,
    [`f`]: `(![]+[])[+[]]`,
    [`g`]: `_$[-~-~-~-~-~-~-~[]]`,
    [`h`]: `(-~-~-~-~[]*-~-~-~-~[]-~[])[_$]([]+-~-~-~[]+-~-~[])`,
    [`i`]: `([][[]]+[])[-~-~-~-~-~[]]`,
    [`j`]: `({}+[])[-~-~-~[]]`,
    [`k`]: `(+([]+-~-~[]+(+[])))[_$]([]+-~-~[]+-~+[])`,
    [`l`]: `(![]+[])[-~-~[]]`,
    [`m`]: `(+([]+-~-~[]+-~-~[]))[_$]([]+-~-~[]+-~-~-~[])`,
    [`n`]: `([][[]]+[])[-~[]]`,
    [`o`]: `({}+[])[-~[]]`,
    [`p`]: `(-~-~-~-~-~[]*-~-~-~-~-~[])[_$]([]+-~-~-~[]+-~-~[])`,
    [`q`]: `(+([]+-~-~-[]+-~-~-~-~-~-~[]))[_$]([]+-~-~-~[]+-~-~[])`,
    [`r`]: `(!![]+[])[-~[]]`,
    [`s`]: `(![]+[])[-~-~-~[]]`,
    [`t`]: `(!![]+[])[+[]]`,
    [`u`]: `([][[]]+[])[+[]]`,
    [`v`]: `(+([]+-~-~-~[]+-~[]))[_$]([]+-~-~-~[]+-~-~[])`,
    [`w`]: `(+([]+-~-~-~[]+-~-~[]))[_$]([]+-~-~-~[]+-~-~-~[])`,
    [`x`]: `(+([]+-~-~-~[]+-~-~-~[]))[_$]([]+-~-~-~[]+-~-~-~-~[])`,
    [`y`]: `(-~[]/[]+[])[-~-~-~-~-~-~-~[]]`,
    [`z`]: `(+([]+-~-~-~[]+-~-~-~-~-~[]))[_$]([]+-~-~-~[]+-~-~-~-~-~-~[])`,
    [`{`]: `(/\\{/+[])[-~-~[]]`,
    [`|`]: `(/|/+[])[-~[]]`,
    [`}`]: `(/\\}/+[])[-~-~[]]`,
    [`~`]: `(/~/+[])[-~[]]`,
};

function parse(text) {
    var isHeaderExist = false;
    var mappedChars = [];

    for (var char of text.match(new RegExp(Object.keys(STRING_MAP).concat(["."]).join("|").replace(/\[/g, "\\[").replace(/\]/g, "\\]"), "g"))) {
        if (CHAR_MAP[char]) {
            if (!isHeaderExist) {
                isHeaderExist = true;

                if (!isNaN(char)) {
                    mappedChars.push("[]");
                }
            }

            mappedChars.push(CHAR_MAP[char]);
        }
        else if (STRING_MAP[char]) {
            if (!isHeaderExist) {
                isHeaderExist = true;
                mappedChars.push("[]");
            }

            mappedChars.push(STRING_MAP[char]);
        }
        else {
            var charCodeText = char.charCodeAt().toString();
            var mappedNumberChars = [];

            for (var numberChar of charCodeText) {
                mappedNumberChars.push(CHAR_MAP[numberChar]);
            }

            mappedChars.push("_$$([]+" + mappedNumberChars.join("+") + ")");
        }
    }

    return mappedChars.join("+");
}

function transpile(script) {
    return HEADER + ";[][__][__](" + parse(script) + ")()";
}
